<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法 on 愿我如星君如月，夜夜流光相皎洁！</title>
    <link>https://yuallon.github.io/categories/%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 算法 on 愿我如星君如月，夜夜流光相皎洁！</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 02 Nov 2020 00:47:54 +0800</lastBuildDate>
    
	<atom:link href="https://yuallon.github.io/categories/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>线性规划DOCPLEX习题  盒子分配问题</title>
      <link>https://yuallon.github.io/post/%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92docplex%E4%B9%A0%E9%A2%98-%E7%9B%92%E5%AD%90%E5%88%86%E9%85%8D%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 02 Nov 2020 00:47:54 +0800</pubDate>
      
      <guid>https://yuallon.github.io/post/%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92docplex%E4%B9%A0%E9%A2%98-%E7%9B%92%E5%AD%90%E5%88%86%E9%85%8D%E9%97%AE%E9%A2%98/</guid>
      <description>英文文档的标题是 Objects in boxes，为了翻译方便我将采用 盒子分配 并且将 object &amp;ndash;&amp;gt; 小球。 盒子分配 我们采用 IBM Decision Optimization CPLEX（DOCPLEX）python模</description>
    </item>
    
    <item>
      <title>混合整数规划MILP算法</title>
      <link>https://yuallon.github.io/post/%E6%B7%B7%E5%90%88%E6%95%B4%E6%95%B0%E8%A7%84%E5%88%92milp%E7%AE%97%E6%B3%95/</link>
      <pubDate>Tue, 27 Oct 2020 23:45:45 +0800</pubDate>
      
      <guid>https://yuallon.github.io/post/%E6%B7%B7%E5%90%88%E6%95%B4%E6%95%B0%E8%A7%84%E5%88%92milp%E7%AE%97%E6%B3%95/</guid>
      <description>###前言 今天公司销售部的小伙伴让我帮忙写一下 混合整数规划算法 解释文档，用于发给客户那边。简单说一下为何用这个算法，因为公司接了某个活猪屠宰</description>
    </item>
    
    <item>
      <title>Python中MD5加密</title>
      <link>https://yuallon.github.io/post/python%E4%B8%ADmd5%E5%8A%A0%E5%AF%86/</link>
      <pubDate>Sat, 03 Oct 2020 21:48:07 +0800</pubDate>
      
      <guid>https://yuallon.github.io/post/python%E4%B8%ADmd5%E5%8A%A0%E5%AF%86/</guid>
      <description>###MD5加密简介 全称：MD5消息摘要算法(英语：MD5 Message-Digest Algorithm)，一种被广泛使用的密码散列函数，可以产生出一个128位(16</description>
    </item>
    
    <item>
      <title>二分法算法</title>
      <link>https://yuallon.github.io/post/%E4%BA%8C%E5%88%86%E6%B3%95%E7%AE%97%E6%B3%95/</link>
      <pubDate>Mon, 14 Sep 2020 23:03:12 +0800</pubDate>
      
      <guid>https://yuallon.github.io/post/%E4%BA%8C%E5%88%86%E6%B3%95%E7%AE%97%E6%B3%95/</guid>
      <description>前言 二分法（Binary search）对于一个 已排序的对象 是一个很有效的算法。二分法可以理解为一个 动态的夹逼行为（夹逼定理） ，通过重复选择列</description>
    </item>
    
  </channel>
</rss>