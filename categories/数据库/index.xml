<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据库 on 愿我如星君如月，夜夜流光相皎洁！</title>
    <link>https://yuallon.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
    <description>Recent content in 数据库 on 愿我如星君如月，夜夜流光相皎洁！</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 21 Dec 2020 11:26:14 +0800</lastBuildDate>
    
	<atom:link href="https://yuallon.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>数据定义语言DDL</title>
      <link>https://yuallon.github.io/post/%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89%E8%AF%AD%E8%A8%80ddl/</link>
      <pubDate>Mon, 21 Dec 2020 11:26:14 +0800</pubDate>
      
      <guid>https://yuallon.github.io/post/%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89%E8%AF%AD%E8%A8%80ddl/</guid>
      <description>数据定义语言DDL（Data Definition Language）是SQL语言集中负责数据结构定义与数据库对象定义的语言，由 CREATE、ALTER、DROP</description>
    </item>
    
    <item>
      <title>MySQL中REGEX操作符介绍</title>
      <link>https://yuallon.github.io/post/mysql%E4%B8%ADregex%E6%93%8D%E4%BD%9C%E7%AC%A6%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Tue, 03 Nov 2020 23:17:23 +0800</pubDate>
      
      <guid>https://yuallon.github.io/post/mysql%E4%B8%ADregex%E6%93%8D%E4%BD%9C%E7%AC%A6%E4%BB%8B%E7%BB%8D/</guid>
      <description>正则表达式简介 正则表达式是描述搜索模式的特殊字符串。 它是一个强大的工具，为您提供一种简洁灵活的方法来识别基于模式的文本字符，例如字符，单词等</description>
    </item>
    
    <item>
      <title>MySQL中LIKE操作符介绍</title>
      <link>https://yuallon.github.io/post/mysql%E4%B8%ADlike%E6%93%8D%E4%BD%9C%E7%AC%A6%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Tue, 03 Nov 2020 23:10:46 +0800</pubDate>
      
      <guid>https://yuallon.github.io/post/mysql%E4%B8%ADlike%E6%93%8D%E4%BD%9C%E7%AC%A6%E4%BB%8B%E7%BB%8D/</guid>
      <description>LIKE操作符通常用于基于模式查询选择数据。以正确的方式使用LIKE运算符对于增加/减少查询性能至关重要。 LIKE操作符允许您根据指定的模式</description>
    </item>
    
    <item>
      <title>MySQL中IN操作符介绍</title>
      <link>https://yuallon.github.io/post/mysql%E4%B8%ADin%E6%93%8D%E4%BD%9C%E7%AC%A6%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Tue, 03 Nov 2020 23:03:19 +0800</pubDate>
      
      <guid>https://yuallon.github.io/post/mysql%E4%B8%ADin%E6%93%8D%E4%BD%9C%E7%AC%A6%E4%BB%8B%E7%BB%8D/</guid>
      <description>IN运算符允许您确定指定的值是否与列表中的值或子查询中的任何值匹配。 下面说明了IN操作符的语法 1 2 3 4 5 6 SELECT column1,column2,... FROM table_name WHERE (expr|column_1) IN (&amp;#39;value1&amp;#39;,&amp;#39;value2&amp;#39;,...); 下面我们更详细的来</description>
    </item>
    
    <item>
      <title>SQL查找第N高的数据</title>
      <link>https://yuallon.github.io/post/sql%E6%9F%A5%E6%89%BE%E7%AC%ACn%E9%AB%98%E7%9A%84%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Mon, 02 Nov 2020 23:38:10 +0800</pubDate>
      
      <guid>https://yuallon.github.io/post/sql%E6%9F%A5%E6%89%BE%E7%AC%ACn%E9%AB%98%E7%9A%84%E6%95%B0%E6%8D%AE/</guid>
      <description>题目 编写一个 SQL 查询，获取 Employee 表中第 n 高的薪水（Salary）。 1 2 3 4 5 6 7 +----+--------+ | Id | Salary | +----+--------+ | 1 | 100 | | 2 | 200 | | 3 | 300 | +----+--------+ 例如上述 Employee 表，n = 2</description>
    </item>
    
    <item>
      <title>SQL语句  连表查询</title>
      <link>https://yuallon.github.io/post/sql%E8%AF%AD%E5%8F%A5-%E8%BF%9E%E8%A1%A8%E6%9F%A5%E8%AF%A2/</link>
      <pubDate>Thu, 22 Oct 2020 00:21:06 +0800</pubDate>
      
      <guid>https://yuallon.github.io/post/sql%E8%AF%AD%E5%8F%A5-%E8%BF%9E%E8%A1%A8%E6%9F%A5%E8%AF%A2/</guid>
      <description>Mysql联合查询UNION和UNION ALL的使用介绍</description>
    </item>
    
    <item>
      <title>SQL语句  截取字符串substr</title>
      <link>https://yuallon.github.io/post/sql%E8%AF%AD%E5%8F%A5-%E6%88%AA%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2substr/</link>
      <pubDate>Wed, 21 Oct 2020 23:21:12 +0800</pubDate>
      
      <guid>https://yuallon.github.io/post/sql%E8%AF%AD%E5%8F%A5-%E6%88%AA%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2substr/</guid>
      <description>MySQL SUBSTR()函数 用来截取字符串 syntax：substr(string, start, length) string：目标字符串 start：起始位置（MySQL中</description>
    </item>
    
    <item>
      <title>SQL语句  字符串拼接concat</title>
      <link>https://yuallon.github.io/post/sql%E8%AF%AD%E5%8F%A5-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%BC%E6%8E%A5concat/</link>
      <pubDate>Wed, 21 Oct 2020 23:20:47 +0800</pubDate>
      
      <guid>https://yuallon.github.io/post/sql%E8%AF%AD%E5%8F%A5-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%BC%E6%8E%A5concat/</guid>
      <description>MySQL中concat函数 CONCAT(str1, str2, &amp;hellip;) 返回结果为连接str1，str2，···，等参数 产生的字符串。 注： 参数可以为1个或多个 如果任何一个参数为N</description>
    </item>
    
    <item>
      <title>SQL语句--表复制</title>
      <link>https://yuallon.github.io/post/sql%E8%AF%AD%E5%8F%A5-%E8%A1%A8%E5%A4%8D%E5%88%B6/</link>
      <pubDate>Wed, 21 Oct 2020 22:49:38 +0800</pubDate>
      
      <guid>https://yuallon.github.io/post/sql%E8%AF%AD%E5%8F%A5-%E8%A1%A8%E5%A4%8D%E5%88%B6/</guid>
      <description>MySQL表格复制4中类别 仅复制表结构 1 2 CREATE TABLE copy1 LIKE table1 ; 注：从LIKE关键字就可以明白，复制表结构。 复制表结构+数据 1 2 3 CREATE TABLE copy2 SELECT * FROM table2 ; 注：</description>
    </item>
    
    <item>
      <title>SQL语句--注释方式</title>
      <link>https://yuallon.github.io/post/sql%E8%AF%AD%E5%8F%A5-%E6%B3%A8%E9%87%8A%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Wed, 21 Oct 2020 22:49:09 +0800</pubDate>
      
      <guid>https://yuallon.github.io/post/sql%E8%AF%AD%E5%8F%A5-%E6%B3%A8%E9%87%8A%E6%96%B9%E5%BC%8F/</guid>
      <description>MySQL有三种注释方式： 单行注释 1 MySQL syntax #this is a comment 单行注释 1 MySQL syntax -- this is a comment 注意 &amp;ndash; 后面要有空格 多行注释 1 2 3 4 5 MySQL syntax /* this is a comment 1 this is a comment 2 */ MySQL syntax</description>
    </item>
    
    <item>
      <title>MySQL连续空余座位</title>
      <link>https://yuallon.github.io/post/mysql%E8%BF%9E%E7%BB%AD%E7%A9%BA%E4%BD%99%E5%BA%A7%E4%BD%8D/</link>
      <pubDate>Tue, 15 Sep 2020 22:04:50 +0800</pubDate>
      
      <guid>https://yuallon.github.io/post/mysql%E8%BF%9E%E7%BB%AD%E7%A9%BA%E4%BD%99%E5%BA%A7%E4%BD%8D/</guid>
      <description>题目描述 几个朋友来到电影院的售票处，准备预约连续空余座位。 你能利用表 cinema ，帮他们写一个查询语句，获取所有空余座位，并将它们按照 seat_id 排序后返回吗？</description>
    </item>
    
    <item>
      <title>MySQL中CASE方法</title>
      <link>https://yuallon.github.io/post/mysql%E4%B8%ADcase%E6%96%B9%E6%B3%95/</link>
      <pubDate>Mon, 07 Sep 2020 21:56:01 +0800</pubDate>
      
      <guid>https://yuallon.github.io/post/mysql%E4%B8%ADcase%E6%96%B9%E6%B3%95/</guid>
      <description>一文搞懂case when所有使用场景</description>
    </item>
    
    <item>
      <title>MySQL中join方法</title>
      <link>https://yuallon.github.io/post/mysql%E4%B8%ADjoin%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sun, 06 Sep 2020 14:59:36 +0800</pubDate>
      
      <guid>https://yuallon.github.io/post/mysql%E4%B8%ADjoin%E6%96%B9%E6%B3%95/</guid>
      <description>前言 在Mysql中，经常需要从多个数据表中读取数据。在SELECT、UPDATE、DELETE语句中，可以使用JOIN方法来联合多表查询。 J</description>
    </item>
    
    <item>
      <title>MySQL查看数据库编码</title>
      <link>https://yuallon.github.io/post/mysql%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BC%96%E7%A0%81/</link>
      <pubDate>Sun, 06 Sep 2020 14:53:08 +0800</pubDate>
      
      <guid>https://yuallon.github.io/post/mysql%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BC%96%E7%A0%81/</guid>
      <description>查看数据库编码格式 1 show create database &amp;lt;数据库名字&amp;gt;; 查看数据表编码格式 1 show create table &amp;lt;数据表名字&amp;gt;; 创建数据库时指定数据库的编码格式</description>
    </item>
    
    <item>
      <title>SQL经典练习题</title>
      <link>https://yuallon.github.io/post/sql%E7%BB%8F%E5%85%B8%E7%BB%83%E4%B9%A0%E9%A2%98/</link>
      <pubDate>Sat, 05 Sep 2020 18:29:37 +0800</pubDate>
      
      <guid>https://yuallon.github.io/post/sql%E7%BB%8F%E5%85%B8%E7%BB%83%E4%B9%A0%E9%A2%98/</guid>
      <description>SQL经典练习题 使用方法：我用的数据库是MsSQL Server 2008，练习时应当自己建数据，自己先思考，切勿急躁翻答案！否则效果减半，做完这些题，恭</description>
    </item>
    
    <item>
      <title>Mysql查询练习</title>
      <link>https://yuallon.github.io/post/mysql%E6%9F%A5%E8%AF%A2%E7%BB%83%E4%B9%A0/</link>
      <pubDate>Fri, 04 Sep 2020 13:26:56 +0800</pubDate>
      
      <guid>https://yuallon.github.io/post/mysql%E6%9F%A5%E8%AF%A2%E7%BB%83%E4%B9%A0/</guid>
      <description>创建查询练习数据库及表格 1 2 3 #创建一个学校数据库 mysql&amp;gt; create database School; Query OK, 1 row affected (0.00 sec) ####学生表 学号 姓名 性别 所在班级 出生日期 1 2 mysql&amp;gt; create table student( number varchar(20) primary key, name varchar(20) not</description>
    </item>
    
    <item>
      <title>Mysql数据表三大范式</title>
      <link>https://yuallon.github.io/post/mysql%E6%95%B0%E6%8D%AE%E8%A1%A8%E4%B8%89%E5%A4%A7%E8%8C%83%E5%BC%8F/</link>
      <pubDate>Fri, 04 Sep 2020 12:14:41 +0800</pubDate>
      
      <guid>https://yuallon.github.io/post/mysql%E6%95%B0%E6%8D%AE%E8%A1%A8%E4%B8%89%E5%A4%A7%E8%8C%83%E5%BC%8F/</guid>
      <description>前言 当我们利用Mysql来管理数据库的时候，是绕不开对数据表的操作的。在对数据表的创建过程中，如何使得后续的操作更有效率？这便是Mysql数</description>
    </item>
    
    <item>
      <title>Mysql基础学习</title>
      <link>https://yuallon.github.io/post/mysql%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Thu, 03 Sep 2020 13:42:58 +0800</pubDate>
      
      <guid>https://yuallon.github.io/post/mysql%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/</guid>
      <description>###终端命令操作数据库 ####如何在终端打开Mysql？ 1 mysql -uroot -p123456 其中，&amp;ldquo;root&amp;quot;是打开哪一个数据库，&amp;ldquo;</description>
    </item>
    
    <item>
      <title>Mysql重置密码</title>
      <link>https://yuallon.github.io/post/mysql%E9%87%8D%E7%BD%AE%E5%AF%86%E7%A0%81/</link>
      <pubDate>Thu, 03 Sep 2020 13:17:11 +0800</pubDate>
      
      <guid>https://yuallon.github.io/post/mysql%E9%87%8D%E7%BD%AE%E5%AF%86%E7%A0%81/</guid>
      <description>Mysql安装 关于Mysql的安装，可以去官方网站下载DMG文件，一路点到底就好了。在这里我推荐参照这篇安装教程Mac电脑安装及终端命令使用</description>
    </item>
    
  </channel>
</rss>